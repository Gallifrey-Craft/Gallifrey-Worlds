/*
 * 
 * Could not load the following classes:
 *  net.minecraft.client.renderer.entity.BipedRenderer
 *  net.minecraft.client.renderer.entity.IEntityRenderer
 *  net.minecraft.client.renderer.entity.layers.BipedArmorLayer
 *  net.minecraft.client.renderer.entity.layers.LayerRenderer
 *  net.minecraft.client.renderer.entity.model.BipedModel
 *  net.minecraft.entity.Entity
 *  net.minecraft.entity.EntityType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.client.event.ModelRegistryEvent
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.client.registry.RenderingRegistry
 */
package gallifreyworlds.entity.renderer;

import gallifreyworlds.entity.JawaEntity;
import net.minecraft.client.renderer.entity.BipedRenderer;
import net.minecraft.client.renderer.entity.IEntityRenderer;
import net.minecraft.client.renderer.entity.layers.BipedArmorLayer;
import net.minecraft.client.renderer.entity.layers.LayerRenderer;
import net.minecraft.client.renderer.entity.model.BipedModel;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityType;
import net.minecraft.util.ResourceLocation;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.client.event.ModelRegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.client.registry.RenderingRegistry;

@OnlyIn(value=Dist.CLIENT)
public class JawaRenderer {

    public static class ModelRegisterHandler {
        @SubscribeEvent
        @OnlyIn(value=Dist.CLIENT)
        public void registerModels(ModelRegistryEvent event) {
            RenderingRegistry.registerEntityRenderingHandler((EntityType)JawaEntity.entity, renderManager -> {
                BipedRenderer customRender = new BipedRenderer(renderManager, new BipedModel(0.0f), 0.5f){

                    public ResourceLocation func_110775_a(Entity entity) {
                        return new ResourceLocation("gallifrey_worlds:textures/jwa.png");
                    }
                };
                customRender.func_177094_a((LayerRenderer)new BipedArmorLayer((IEntityRenderer)customRender, new BipedModel(0.5f), new BipedModel(1.0f)));
                return customRender;
            });
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.entity.CreatureAttribute
 *  net.minecraft.entity.CreatureEntity
 *  net.minecraft.entity.Entity
 *  net.minecraft.entity.EntityClassification
 *  net.minecraft.entity.EntityType
 *  net.minecraft.entity.EntityType$Builder
 *  net.minecraft.entity.LivingEntity
 *  net.minecraft.entity.MobEntity
 *  net.minecraft.entity.ai.attributes.AttributeModifierMap$MutableAttribute
 *  net.minecraft.entity.ai.attributes.Attributes
 *  net.minecraft.entity.ai.goal.Goal
 *  net.minecraft.entity.ai.goal.HurtByTargetGoal
 *  net.minecraft.entity.ai.goal.LookRandomlyGoal
 *  net.minecraft.entity.ai.goal.MeleeAttackGoal
 *  net.minecraft.entity.ai.goal.RandomWalkingGoal
 *  net.minecraft.entity.ai.goal.SwimGoal
 *  net.minecraft.entity.monster.MonsterEntity
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.SpawnEggItem
 *  net.minecraft.network.IPacket
 *  net.minecraft.util.DamageSource
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.SoundEvent
 *  net.minecraft.util.text.ITextComponent
 *  net.minecraft.util.text.StringTextComponent
 *  net.minecraft.world.World
 *  net.minecraftforge.event.entity.EntityAttributeCreationEvent
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 *  net.minecraftforge.fml.network.FMLPlayMessages$SpawnEntity
 *  net.minecraftforge.fml.network.NetworkHooks
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.entity;

import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.entity.renderer.JawaRenderer;
import net.minecraft.entity.CreatureAttribute;
import net.minecraft.entity.CreatureEntity;
import net.minecraft.entity.Entity;
import net.minecraft.entity.EntityClassification;
import net.minecraft.entity.EntityType;
import net.minecraft.entity.LivingEntity;
import net.minecraft.entity.MobEntity;
import net.minecraft.entity.ai.attributes.AttributeModifierMap;
import net.minecraft.entity.ai.attributes.Attributes;
import net.minecraft.entity.ai.goal.Goal;
import net.minecraft.entity.ai.goal.HurtByTargetGoal;
import net.minecraft.entity.ai.goal.LookRandomlyGoal;
import net.minecraft.entity.ai.goal.MeleeAttackGoal;
import net.minecraft.entity.ai.goal.RandomWalkingGoal;
import net.minecraft.entity.ai.goal.SwimGoal;
import net.minecraft.entity.monster.MonsterEntity;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.SpawnEggItem;
import net.minecraft.network.IPacket;
import net.minecraft.util.DamageSource;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraft.util.text.ITextComponent;
import net.minecraft.util.text.StringTextComponent;
import net.minecraft.world.World;
import net.minecraftforge.event.entity.EntityAttributeCreationEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.fml.network.FMLPlayMessages;
import net.minecraftforge.fml.network.NetworkHooks;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class JawaEntity
extends GallifreyWorldsModElements.ModElement {
    public static EntityType entity = (EntityType)EntityType.Builder.func_220322_a(CustomEntity::new, (EntityClassification)EntityClassification.MONSTER).setShouldReceiveVelocityUpdates(true).setTrackingRange(64).setUpdateInterval(3).setCustomClientFactory(CustomEntity::new).func_220320_c().func_220321_a(0.6f, 1.8f).func_206830_a("jawa").setRegistryName("jawa");

    public JawaEntity(GallifreyWorldsModElements instance) {
        super(instance, 16);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new JawaRenderer.ModelRegisterHandler());
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new EntityAttributesRegisterHandler());
    }

    @Override
    public void initElements() {
        this.elements.entities.add(() -> entity);
        this.elements.items.add(() -> (Item)new SpawnEggItem(entity, -3368704, -1, new Item.Properties().func_200916_a(ItemGroup.field_78026_f)).setRegistryName("jawa_spawn_egg"));
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    public static class CustomEntity
    extends MonsterEntity {
        public CustomEntity(FMLPlayMessages.SpawnEntity packet, World world) {
            this((EntityType<CustomEntity>)entity, world);
        }

        public CustomEntity(EntityType<CustomEntity> type, World world) {
            super(type, world);
            this.field_70728_aV = 0;
            this.func_94061_f(false);
            this.func_200203_b((ITextComponent)new StringTextComponent("Gallifrey"));
            this.func_174805_g(true);
            this.func_110163_bv();
        }

        public IPacket<?> func_213297_N() {
            return NetworkHooks.getEntitySpawningPacket((Entity)this);
        }

        protected void func_184651_r() {
            super.func_184651_r();
            this.field_70714_bg.func_75776_a(1, (Goal)new MeleeAttackGoal((CreatureEntity)this, 1.2, false){

                protected double func_179512_a(LivingEntity entity) {
                    return 4.0 + (double)(entity.func_213311_cf() * entity.func_213311_cf());
                }
            });
            this.field_70714_bg.func_75776_a(2, (Goal)new RandomWalkingGoal((CreatureEntity)this, 1.0));
            this.field_70715_bh.func_75776_a(3, (Goal)new HurtByTargetGoal((CreatureEntity)this, new Class[0]));
            this.field_70714_bg.func_75776_a(4, (Goal)new LookRandomlyGoal((MobEntity)this));
            this.field_70714_bg.func_75776_a(5, (Goal)new SwimGoal((MobEntity)this));
        }

        public CreatureAttribute func_70668_bt() {
            return CreatureAttribute.field_223222_a_;
        }

        public boolean func_213397_c(double distanceToClosestPlayer) {
            return false;
        }

        public SoundEvent func_184639_G() {
            return (SoundEvent)ForgeRegistries.SOUND_EVENTS.getValue(new ResourceLocation("ambient.soul_sand_valley.additions"));
        }

        public SoundEvent func_184601_bQ(DamageSource ds) {
            return (SoundEvent)ForgeRegistries.SOUND_EVENTS.getValue(new ResourceLocation("entity.generic.hurt"));
        }

        public SoundEvent func_184615_bR() {
            return (SoundEvent)ForgeRegistries.SOUND_EVENTS.getValue(new ResourceLocation("entity.generic.death"));
        }

        public boolean func_70097_a(DamageSource source, float amount) {
            if (source == DamageSource.field_76379_h) {
                return false;
            }
            if (source == DamageSource.field_76367_g) {
                return false;
            }
            if (source.func_76355_l().equals("trident")) {
                return false;
            }
            if (source == DamageSource.field_188407_q) {
                return false;
            }
            return super.func_70097_a(source, amount);
        }
    }

    private static class EntityAttributesRegisterHandler {
        private EntityAttributesRegisterHandler() {
        }

        @SubscribeEvent
        public void onEntityAttributeCreation(EntityAttributeCreationEvent event) {
            AttributeModifierMap.MutableAttribute ammma = MobEntity.func_233666_p_();
            ammma = ammma.func_233815_a_(Attributes.field_233821_d_, 0.3);
            ammma = ammma.func_233815_a_(Attributes.field_233818_a_, 10.0);
            ammma = ammma.func_233815_a_(Attributes.field_233826_i_, 0.0);
            ammma = ammma.func_233815_a_(Attributes.field_233823_f_, 3.0);
            ammma = ammma.func_233815_a_(Attributes.field_233824_g_, 0.1);
            event.put(entity, ammma.func_233813_a_());
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.advancements.Advancement
 *  net.minecraft.advancements.AdvancementProgress
 *  net.minecraft.entity.Entity
 *  net.minecraft.entity.player.ServerPlayerEntity
 *  net.minecraft.util.ResourceLocation
 */
package gallifreyworlds.procedures;

import gallifreyworlds.GallifreyWorldsMod;
import java.util.Map;
import net.minecraft.advancements.Advancement;
import net.minecraft.advancements.AdvancementProgress;
import net.minecraft.entity.Entity;
import net.minecraft.entity.player.ServerPlayerEntity;
import net.minecraft.util.ResourceLocation;

public class FuckCommandExecutedProcedure {
    public static void executeProcedure(Map<String, Object> dependencies) {
        if (dependencies.get("entity") == null) {
            if (!dependencies.containsKey("entity")) {
                GallifreyWorldsMod.LOGGER.warn("Failed to load dependency entity for procedure FuckCommandExecuted!");
            }
            return;
        }
        Entity entity = (Entity)dependencies.get("entity");
        if (entity instanceof ServerPlayerEntity) {
            Advancement _adv = ((ServerPlayerEntity)entity).field_71133_b.func_191949_aK().func_192778_a(new ResourceLocation("gallifrey_worlds:nevergettinglaid"));
            AdvancementProgress _ap = ((ServerPlayerEntity)entity).func_192039_O().func_192747_a(_adv);
            if (!_ap.func_192105_a()) {
                for (String _criterion : _ap.func_192107_d()) {
                    ((ServerPlayerEntity)entity).func_192039_O().func_192750_a(_adv, _criterion);
                }
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.world.dimension;

<if you read this far you need to get a girlfriend or atleast a life>

import com.google.common.collect.ImmutableSet;
import gallifreyworlds.GallifreyWorldsModElements;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class LothalDimension
extends GallifreyWorldsModElements.ModElement {
    public LothalDimension(GallifreyWorldsModElements instance) {
        super(instance, 19);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_196658_i);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:lothalmain"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:lothalmain"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(128.0f, true, DimensionRenderInfo.FogType.NORMAL, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return new Vector3d(0.8, 0.4, 0.0);
            }

            public boolean func_230493_a_(int x, int y) {
                return false;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:lothal"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.world.dimension;

import com.google.common.collect.ImmutableSet;
import gallifreyworlds.GallifreyWorldsModElements;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class HothDimension
extends GallifreyWorldsModElements.ModElement {
    public HothDimension(GallifreyWorldsModElements instance) {
        super(instance, 5);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_196604_cC);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("snowy_mountains"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("snowy_mountains"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:hothmain"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:hothmain"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(Float.NaN, true, DimensionRenderInfo.FogType.NONE, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return new Vector3d(0.6, 1.0, 1.0);
            }

            public boolean func_230493_a_(int x, int y) {
                return true;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:hoth"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.world.dimension;

import com.google.common.collect.ImmutableSet;
import gallifreyworlds.GallifreyWorldsModElements;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class RylothDimension
extends GallifreyWorldsModElements.ModElement {
    public RylothDimension(GallifreyWorldsModElements instance) {
        super(instance, 25);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_196582_bJ);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:tatooine_desert"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:tatooine_desert"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(128.0f, true, DimensionRenderInfo.FogType.NORMAL, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return color.func_216372_d((double)sunHeight * 0.94 + 0.06, (double)sunHeight * 0.94 + 0.06, (double)sunHeight * 0.91 + 0.09);
            }

            public boolean func_230493_a_(int x, int y) {
                return false;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:ryloth"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.world.dimension;

import com.google.common.collect.ImmutableSet;
import gallifreyworlds.GallifreyWorldsModElements;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class TheSunDimension
extends GallifreyWorldsModElements.ModElement {
    public TheSunDimension(GallifreyWorldsModElements instance) {
        super(instance, 23);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_150359_w);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:star"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:star"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(Float.NaN, true, DimensionRenderInfo.FogType.NONE, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return color;
            }

            public boolean func_230493_a_(int x, int y) {
                return false;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:the_sun"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.world.dimension;

import com.google.common.collect.ImmutableSet;
import gallifreyworlds.GallifreyWorldsModElements;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class WorldTatooineDimension
extends GallifreyWorldsModElements.ModElement {
    public WorldTatooineDimension(GallifreyWorldsModElements instance) {
        super(instance, 3);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_150354_m);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:tatooine_desert"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:tatooine_desert"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(128.0f, true, DimensionRenderInfo.FogType.NORMAL, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return color.func_216372_d((double)sunHeight * 0.94 + 0.06, (double)sunHeight * 0.94 + 0.06, (double)sunHeight * 0.91 + 0.09);
            }

            public boolean func_230493_a_(int x, int y) {
                return false;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:tatooine"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.world.dimension;

import com.google.common.collect.ImmutableSet;
import gallifreyworlds.GallifreyWorldsModElements;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class NabooDimension
extends GallifreyWorldsModElements.ModElement {
    public NabooDimension(GallifreyWorldsModElements instance) {
        super(instance, 7);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_196658_i);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("bamboo_jungle"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("bamboo_jungle"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("forest"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("forest"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("bamboo_jungle_hills"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("bamboo_jungle_hills"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(Float.NaN, true, DimensionRenderInfo.FogType.NONE, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return color;
            }

            public boolean func_230493_a_(int x, int y) {
                return false;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:naboo"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.google.common.collect.ImmutableSet$Builder
 *  it.unimi.dsi.fastutil.objects.Object2ObjectMap
 *  net.minecraft.block.Block
 *  net.minecraft.block.Blocks
 *  net.minecraft.client.world.DimensionRenderInfo
 *  net.minecraft.client.world.DimensionRenderInfo$FogType
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.vector.Vector3d
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.gen.carver.WorldCarver
 *  net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.fml.DeferredWorkQueue
 *  net.minecraftforge.fml.common.ObfuscationReflectionHelper
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.registries.ForgeRegistries
 */
package gallifreyworlds.world.dimension;

import com.google.common.collect.ImmutableSet;
import gallifreyworlds.GallifreyWorldsModElements;
import it.unimi.dsi.fastutil.objects.Object2ObjectMap;
import java.util.HashSet;
import java.util.Set;
import net.minecraft.block.Block;
import net.minecraft.block.Blocks;
import net.minecraft.client.world.DimensionRenderInfo;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.vector.Vector3d;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.gen.carver.WorldCarver;
import net.minecraft.world.gen.surfacebuilders.ConfiguredSurfaceBuilder;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.fml.DeferredWorkQueue;
import net.minecraftforge.fml.common.ObfuscationReflectionHelper;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.registries.ForgeRegistries;

@GallifreyWorldsModElements.ModElement.Tag
public class MustafarDimension
extends GallifreyWorldsModElements.ModElement {
    public MustafarDimension(GallifreyWorldsModElements instance) {
        super(instance, 9);
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
        HashSet<Block> replaceableBlocks = new HashSet<Block>();
        replaceableBlocks.add(Blocks.field_150424_aL);
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:hell"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204108_a().func_177230_c());
        replaceableBlocks.add(((ConfiguredSurfaceBuilder)((Biome)ForgeRegistries.BIOMES.getValue(new ResourceLocation("gallifrey_worlds:hell"))).func_242440_e().func_242500_d().get()).func_215452_a().func_204109_b().func_177230_c());
        DeferredWorkQueue.runLater(() -> {
            try {
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222709_a, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
                ObfuscationReflectionHelper.setPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (Object)new ImmutableSet.Builder().addAll((Iterable)((Set)ObfuscationReflectionHelper.getPrivateValue(WorldCarver.class, (Object)WorldCarver.field_222711_c, (String)"field_222718_j"))).addAll((Iterable)replaceableBlocks).build(), (String)"field_222718_j");
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }

    @Override
    @OnlyIn(value=Dist.CLIENT)
    public void clientLoad(FMLClientSetupEvent event) {
        DimensionRenderInfo customEffect = new DimensionRenderInfo(Float.NaN, true, DimensionRenderInfo.FogType.NONE, false, false){

            public Vector3d func_230494_a_(Vector3d color, float sunHeight) {
                return new Vector3d(0.0, 0.0, 0.0);
            }

            public boolean func_230493_a_(int x, int y) {
                return false;
            }
        };
        DeferredWorkQueue.runLater(() -> {
            try {
                Object2ObjectMap effectsRegistry = (Object2ObjectMap)ObfuscationReflectionHelper.getPrivateValue(DimensionRenderInfo.class, null, (String)"field_239208_a_");
                effectsRegistry.put((Object)new ResourceLocation("gallifrey_worlds:mustafar"), (Object)customEffect);
            }
            catch (Exception e) {
                e.printStackTrace();
            }
        });
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Blocks
 *  net.minecraft.entity.EntityClassification
 *  net.minecraft.entity.EntityType
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.biome.Biome$Builder
 *  net.minecraft.world.biome.Biome$Category
 *  net.minecraft.world.biome.Biome$RainType
 *  net.minecraft.world.biome.BiomeAmbience
 *  net.minecraft.world.biome.BiomeAmbience$Builder
 *  net.minecraft.world.biome.BiomeGenerationSettings$Builder
 *  net.minecraft.world.biome.DefaultBiomeFeatures
 *  net.minecraft.world.biome.MobSpawnInfo$Builder
 *  net.minecraft.world.biome.MobSpawnInfo$Spawners
 *  net.minecraft.world.gen.GenerationStage$Decoration
 *  net.minecraft.world.gen.feature.ConfiguredFeature
 *  net.minecraft.world.gen.feature.Feature
 *  net.minecraft.world.gen.feature.Features$Configs
 *  net.minecraft.world.gen.feature.Features$Placements
 *  net.minecraft.world.gen.feature.IFeatureConfig
 *  net.minecraft.world.gen.feature.structure.StructureFeatures
 *  net.minecraft.world.gen.placement.IPlacementConfig
 *  net.minecraft.world.gen.placement.NoiseDependant
 *  net.minecraft.world.gen.placement.Placement
 *  net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilder
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 */
package gallifreyworlds.world.biome;

import gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Blocks;
import net.minecraft.entity.EntityClassification;
import net.minecraft.entity.EntityType;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeAmbience;
import net.minecraft.world.biome.BiomeGenerationSettings;
import net.minecraft.world.biome.DefaultBiomeFeatures;
import net.minecraft.world.biome.MobSpawnInfo;
import net.minecraft.world.gen.GenerationStage;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.Features;
import net.minecraft.world.gen.feature.IFeatureConfig;
import net.minecraft.world.gen.feature.structure.StructureFeatures;
import net.minecraft.world.gen.placement.IPlacementConfig;
import net.minecraft.world.gen.placement.NoiseDependant;
import net.minecraft.world.gen.placement.Placement;
import net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilder;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;

@GallifreyWorldsModElements.ModElement.Tag
public class LothalmainBiome
extends GallifreyWorldsModElements.ModElement {
    public static Biome biome;

    public LothalmainBiome(GallifreyWorldsModElements instance) {
        super(instance, 14);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new BiomeRegisterHandler());
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    private static class BiomeRegisterHandler {
        private BiomeRegisterHandler() {
        }

        @SubscribeEvent
        public void registerBiomes(RegistryEvent.Register<Biome> event) {
            if (biome == null) {
                BiomeAmbience effects = new BiomeAmbience.Builder().func_235239_a_(-26215).func_235246_b_(-10053121).func_235248_c_(-10066177).func_242539_d(-26215).func_242540_e(-3381760).func_242541_f(-3368704).func_235238_a_();
                BiomeGenerationSettings.Builder biomeGenerationSettings = new BiomeGenerationSettings.Builder().func_242517_a(SurfaceBuilder.field_215396_G.func_242929_a((ISurfaceBuilderConfig)new SurfaceBuilderConfig(Blocks.field_196658_i.func_176223_P(), Blocks.field_150348_b.func_176223_P(), Blocks.field_150348_b.func_176223_P())));
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244135_a);
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244154_t);
                biomeGenerationSettings.func_242513_a(GenerationStage.Decoration.VEGETAL_DECORATION, Feature.field_227248_z_.func_225566_b_((IFeatureConfig)Features.Configs.field_243977_a).func_227228_a_(Features.Placements.field_244002_m).func_227228_a_(Placement.field_242900_d.func_227446_a_((IPlacementConfig)new NoiseDependant(-0.8, 5, 4))));
                biomeGenerationSettings.func_242513_a(GenerationStage.Decoration.VEGETAL_DECORATION, (ConfiguredFeature)Feature.field_227247_y_.func_225566_b_((IFeatureConfig)Features.Configs.field_243980_d).func_227228_a_(Features.Placements.field_244000_k).func_227228_a_(Features.Placements.field_244001_l).func_242731_b(4));
                DefaultBiomeFeatures.func_243738_d((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243750_j((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243696_J((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                MobSpawnInfo.Builder mobSpawnInfo = new MobSpawnInfo.Builder().func_242571_a();
                mobSpawnInfo.func_242575_a(EntityClassification.MONSTER, new MobSpawnInfo.Spawners(EntityType.field_200725_aD, 20, 4, 4));
                biome = new Biome.Builder().func_205415_a(Biome.RainType.RAIN).func_205419_a(Biome.Category.NONE).func_205421_a(0.1f).func_205420_b(0.2f).func_205414_c(0.5f).func_205417_d(0.5f).func_235097_a_(effects).func_242458_a(mobSpawnInfo.func_242577_b()).func_242457_a(biomeGenerationSettings.func_242508_a()).func_242455_a();
                event.getRegistry().register(biome.setRegistryName("gallifrey_worlds:lothalmain"));
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Blocks
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.biome.Biome$Builder
 *  net.minecraft.world.biome.Biome$Category
 *  net.minecraft.world.biome.Biome$RainType
 *  net.minecraft.world.biome.BiomeAmbience
 *  net.minecraft.world.biome.BiomeAmbience$Builder
 *  net.minecraft.world.biome.BiomeGenerationSettings$Builder
 *  net.minecraft.world.biome.MobSpawnInfo$Builder
 *  net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilder
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 */
package gallifreyworlds.world.biome;

import gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Blocks;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeAmbience;
import net.minecraft.world.biome.BiomeGenerationSettings;
import net.minecraft.world.biome.MobSpawnInfo;
import net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilder;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;

@GallifreyWorldsModElements.ModElement.Tag
public class StarBiome
extends GallifreyWorldsModElements.ModElement {
    public static Biome biome;

    public StarBiome(GallifreyWorldsModElements instance) {
        super(instance, 22);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new BiomeRegisterHandler());
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    private static class BiomeRegisterHandler {
        private BiomeRegisterHandler() {
        }

        @SubscribeEvent
        public void registerBiomes(RegistryEvent.Register<Biome> event) {
            if (biome == null) {
                BiomeAmbience effects = new BiomeAmbience.Builder().func_235239_a_(-16777216).func_235246_b_(4159204).func_235248_c_(329011).func_242539_d(-16777216).func_242540_e(10387789).func_242541_f(-16777216).func_235238_a_();
                BiomeGenerationSettings.Builder biomeGenerationSettings = new BiomeGenerationSettings.Builder().func_242517_a(SurfaceBuilder.field_215396_G.func_242929_a((ISurfaceBuilderConfig)new SurfaceBuilderConfig(Blocks.field_150359_w.func_176223_P(), Blocks.field_150353_l.func_176223_P(), Blocks.field_150353_l.func_176223_P())));
                MobSpawnInfo.Builder mobSpawnInfo = new MobSpawnInfo.Builder().func_242571_a();
                biome = new Biome.Builder().func_205415_a(Biome.RainType.RAIN).func_205419_a(Biome.Category.NONE).func_205421_a(0.1f).func_205420_b(0.2f).func_205414_c(0.5f).func_205417_d(0.5f).func_235097_a_(effects).func_242458_a(mobSpawnInfo.func_242577_b()).func_242457_a(biomeGenerationSettings.func_242508_a()).func_242455_a();
                event.getRegistry().register(biome.setRegistryName("gallifrey_worlds:star"));
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Blocks
 *  net.minecraft.entity.EntityClassification
 *  net.minecraft.entity.EntityType
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.biome.Biome$Builder
 *  net.minecraft.world.biome.Biome$Category
 *  net.minecraft.world.biome.Biome$RainType
 *  net.minecraft.world.biome.BiomeAmbience
 *  net.minecraft.world.biome.BiomeAmbience$Builder
 *  net.minecraft.world.biome.BiomeGenerationSettings$Builder
 *  net.minecraft.world.biome.DefaultBiomeFeatures
 *  net.minecraft.world.biome.MobSpawnInfo$Builder
 *  net.minecraft.world.biome.MobSpawnInfo$Spawners
 *  net.minecraft.world.gen.GenerationStage$Decoration
 *  net.minecraft.world.gen.blockstateprovider.BlockStateProvider
 *  net.minecraft.world.gen.blockstateprovider.SimpleBlockStateProvider
 *  net.minecraft.world.gen.feature.AbstractFeatureSizeType
 *  net.minecraft.world.gen.feature.BaseTreeFeatureConfig$Builder
 *  net.minecraft.world.gen.feature.ConfiguredFeature
 *  net.minecraft.world.gen.feature.Feature
 *  net.minecraft.world.gen.feature.FeatureSpread
 *  net.minecraft.world.gen.feature.Features$Configs
 *  net.minecraft.world.gen.feature.Features$Placements
 *  net.minecraft.world.gen.feature.IFeatureConfig
 *  net.minecraft.world.gen.feature.TwoLayerFeature
 *  net.minecraft.world.gen.feature.structure.StructureFeatures
 *  net.minecraft.world.gen.foliageplacer.BlobFoliagePlacer
 *  net.minecraft.world.gen.foliageplacer.FoliagePlacer
 *  net.minecraft.world.gen.placement.AtSurfaceWithExtraConfig
 *  net.minecraft.world.gen.placement.IPlacementConfig
 *  net.minecraft.world.gen.placement.Placement
 *  net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilder
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig
 *  net.minecraft.world.gen.trunkplacer.AbstractTrunkPlacer
 *  net.minecraft.world.gen.trunkplacer.StraightTrunkPlacer
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 */
package gallifreyworlds.world.biome;

import gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Blocks;
import net.minecraft.entity.EntityClassification;
import net.minecraft.entity.EntityType;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeAmbience;
import net.minecraft.world.biome.BiomeGenerationSettings;
import net.minecraft.world.biome.DefaultBiomeFeatures;
import net.minecraft.world.biome.MobSpawnInfo;
import net.minecraft.world.gen.GenerationStage;
import net.minecraft.world.gen.blockstateprovider.BlockStateProvider;
import net.minecraft.world.gen.blockstateprovider.SimpleBlockStateProvider;
import net.minecraft.world.gen.feature.AbstractFeatureSizeType;
import net.minecraft.world.gen.feature.BaseTreeFeatureConfig;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.FeatureSpread;
import net.minecraft.world.gen.feature.Features;
import net.minecraft.world.gen.feature.IFeatureConfig;
import net.minecraft.world.gen.feature.TwoLayerFeature;
import net.minecraft.world.gen.feature.structure.StructureFeatures;
import net.minecraft.world.gen.foliageplacer.BlobFoliagePlacer;
import net.minecraft.world.gen.foliageplacer.FoliagePlacer;
import net.minecraft.world.gen.placement.AtSurfaceWithExtraConfig;
import net.minecraft.world.gen.placement.IPlacementConfig;
import net.minecraft.world.gen.placement.Placement;
import net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilder;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig;
import net.minecraft.world.gen.trunkplacer.AbstractTrunkPlacer;
import net.minecraft.world.gen.trunkplacer.StraightTrunkPlacer;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;

@GallifreyWorldsModElements.ModElement.Tag
public class HothmainBiome
extends GallifreyWorldsModElements.ModElement {
    public static Biome biome;

    public HothmainBiome(GallifreyWorldsModElements instance) {
        super(instance, 4);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new BiomeRegisterHandler());
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    private static class BiomeRegisterHandler {
        private BiomeRegisterHandler() {
        }

        @SubscribeEvent
        public void registerBiomes(RegistryEvent.Register<Biome> event) {
            if (biome == null) {
                BiomeAmbience effects = new BiomeAmbience.Builder().func_235239_a_(-1).func_235246_b_(-1).func_235248_c_(-1).func_242539_d(-1).func_242540_e(-1).func_242541_f(-1).func_235238_a_();
                BiomeGenerationSettings.Builder biomeGenerationSettings = new BiomeGenerationSettings.Builder().func_242517_a(SurfaceBuilder.field_215396_G.func_242929_a((ISurfaceBuilderConfig)new SurfaceBuilderConfig(Blocks.field_196658_i.func_176223_P(), Blocks.field_150348_b.func_176223_P(), Blocks.field_196604_cC.func_176223_P())));
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244141_g);
                biomeGenerationSettings.func_242513_a(GenerationStage.Decoration.VEGETAL_DECORATION, Feature.field_236291_c_.func_225566_b_((IFeatureConfig)new BaseTreeFeatureConfig.Builder((BlockStateProvider)new SimpleBlockStateProvider(Blocks.field_196617_K.func_176223_P()), (BlockStateProvider)new SimpleBlockStateProvider(Blocks.field_196642_W.func_176223_P()), (FoliagePlacer)new BlobFoliagePlacer(FeatureSpread.func_242252_a((int)2), FeatureSpread.func_242252_a((int)0), 3), (AbstractTrunkPlacer)new StraightTrunkPlacer(4, 2, 0), (AbstractFeatureSizeType)new TwoLayerFeature(1, 0, 1)).func_236700_a_().func_225568_b_()).func_227228_a_(Features.Placements.field_244001_l).func_227228_a_(Placement.field_242902_f.func_227446_a_((IPlacementConfig)new AtSurfaceWithExtraConfig(4, 0.1f, 1))));
                biomeGenerationSettings.func_242513_a(GenerationStage.Decoration.VEGETAL_DECORATION, (ConfiguredFeature)Feature.field_227247_y_.func_225566_b_((IFeatureConfig)Features.Configs.field_243980_d).func_227228_a_(Features.Placements.field_244000_k).func_227228_a_(Features.Placements.field_244001_l).func_242731_b(4));
                DefaultBiomeFeatures.func_243738_d((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243750_j((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243730_an((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                MobSpawnInfo.Builder mobSpawnInfo = new MobSpawnInfo.Builder().func_242571_a();
                mobSpawnInfo.func_242575_a(EntityClassification.MONSTER, new MobSpawnInfo.Spawners(EntityType.field_200725_aD, 20, 4, 4));
                biome = new Biome.Builder().func_205415_a(Biome.RainType.RAIN).func_205419_a(Biome.Category.NONE).func_205421_a(0.1f).func_205420_b(0.2f).func_205414_c(0.5f).func_205417_d(0.5f).func_235097_a_(effects).func_242458_a(mobSpawnInfo.func_242577_b()).func_242457_a(biomeGenerationSettings.func_242508_a()).func_242455_a();
                event.getRegistry().register(biome.setRegistryName("gallifrey_worlds:hothmain"));
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Blocks
 *  net.minecraft.entity.EntityClassification
 *  net.minecraft.entity.EntityType
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.biome.Biome$Builder
 *  net.minecraft.world.biome.Biome$Category
 *  net.minecraft.world.biome.Biome$RainType
 *  net.minecraft.world.biome.BiomeAmbience
 *  net.minecraft.world.biome.BiomeAmbience$Builder
 *  net.minecraft.world.biome.BiomeGenerationSettings$Builder
 *  net.minecraft.world.biome.DefaultBiomeFeatures
 *  net.minecraft.world.biome.MobSpawnInfo$Builder
 *  net.minecraft.world.biome.MobSpawnInfo$Spawners
 *  net.minecraft.world.gen.feature.structure.StructureFeatures
 *  net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilder
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 */
package gallifreyworlds.world.biome;

import gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Blocks;
import net.minecraft.entity.EntityClassification;
import net.minecraft.entity.EntityType;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeAmbience;
import net.minecraft.world.biome.BiomeGenerationSettings;
import net.minecraft.world.biome.DefaultBiomeFeatures;
import net.minecraft.world.biome.MobSpawnInfo;
import net.minecraft.world.gen.feature.structure.StructureFeatures;
import net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilder;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;

@GallifreyWorldsModElements.ModElement.Tag
public class TatooineBiome
extends GallifreyWorldsModElements.ModElement {
    public static Biome biome;

    public TatooineBiome(GallifreyWorldsModElements instance) {
        super(instance, 1);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new BiomeRegisterHandler());
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    private static class BiomeRegisterHandler {
        private BiomeRegisterHandler() {
        }

        @SubscribeEvent
        public void registerBiomes(RegistryEvent.Register<Biome> event) {
            if (biome == null) {
                BiomeAmbience effects = new BiomeAmbience.Builder().func_235239_a_(-13210).func_235246_b_(4159204).func_235248_c_(329011).func_242539_d(-13210).func_242540_e(10387789).func_242541_f(9470285).func_235238_a_();
                BiomeGenerationSettings.Builder biomeGenerationSettings = new BiomeGenerationSettings.Builder().func_242517_a(SurfaceBuilder.field_215396_G.func_242929_a((ISurfaceBuilderConfig)new SurfaceBuilderConfig(Blocks.field_150354_m.func_176223_P(), Blocks.field_150354_m.func_176223_P(), Blocks.field_196585_ak.func_176223_P())));
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244155_u);
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244143_i);
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244152_r);
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244150_p);
                DefaultBiomeFeatures.func_243738_d((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243750_j((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                MobSpawnInfo.Builder mobSpawnInfo = new MobSpawnInfo.Builder().func_242571_a();
                mobSpawnInfo.func_242575_a(EntityClassification.MONSTER, new MobSpawnInfo.Spawners(EntityType.field_200725_aD, 20, 4, 4));
                biome = new Biome.Builder().func_205415_a(Biome.RainType.RAIN).func_205419_a(Biome.Category.DESERT).func_205421_a(0.1f).func_205420_b(0.2f).func_205414_c(0.5f).func_205417_d(0.5f).func_235097_a_(effects).func_242458_a(mobSpawnInfo.func_242577_b()).func_242457_a(biomeGenerationSettings.func_242508_a()).func_242455_a();
                event.getRegistry().register(biome.setRegistryName("gallifrey_worlds:tatooine_desert"));
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Blocks
 *  net.minecraft.entity.EntityClassification
 *  net.minecraft.entity.EntityType
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.biome.Biome$Builder
 *  net.minecraft.world.biome.Biome$Category
 *  net.minecraft.world.biome.Biome$RainType
 *  net.minecraft.world.biome.BiomeAmbience
 *  net.minecraft.world.biome.BiomeAmbience$Builder
 *  net.minecraft.world.biome.BiomeGenerationSettings$Builder
 *  net.minecraft.world.biome.DefaultBiomeFeatures
 *  net.minecraft.world.biome.MobSpawnInfo$Builder
 *  net.minecraft.world.biome.MobSpawnInfo$Spawners
 *  net.minecraft.world.gen.GenerationStage$Decoration
 *  net.minecraft.world.gen.blockstateprovider.BlockStateProvider
 *  net.minecraft.world.gen.blockstateprovider.SimpleBlockStateProvider
 *  net.minecraft.world.gen.feature.AbstractFeatureSizeType
 *  net.minecraft.world.gen.feature.BaseTreeFeatureConfig$Builder
 *  net.minecraft.world.gen.feature.ConfiguredFeature
 *  net.minecraft.world.gen.feature.Feature
 *  net.minecraft.world.gen.feature.FeatureSpread
 *  net.minecraft.world.gen.feature.Features$Configs
 *  net.minecraft.world.gen.feature.Features$Placements
 *  net.minecraft.world.gen.feature.IFeatureConfig
 *  net.minecraft.world.gen.feature.TwoLayerFeature
 *  net.minecraft.world.gen.foliageplacer.BlobFoliagePlacer
 *  net.minecraft.world.gen.foliageplacer.FoliagePlacer
 *  net.minecraft.world.gen.placement.AtSurfaceWithExtraConfig
 *  net.minecraft.world.gen.placement.IPlacementConfig
 *  net.minecraft.world.gen.placement.NoiseDependant
 *  net.minecraft.world.gen.placement.Placement
 *  net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilder
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig
 *  net.minecraft.world.gen.trunkplacer.AbstractTrunkPlacer
 *  net.minecraft.world.gen.trunkplacer.StraightTrunkPlacer
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 */
package gallifreyworlds.world.biome;

import gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Blocks;
import net.minecraft.entity.EntityClassification;
import net.minecraft.entity.EntityType;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeAmbience;
import net.minecraft.world.biome.BiomeGenerationSettings;
import net.minecraft.world.biome.DefaultBiomeFeatures;
import net.minecraft.world.biome.MobSpawnInfo;
import net.minecraft.world.gen.GenerationStage;
import net.minecraft.world.gen.blockstateprovider.BlockStateProvider;
import net.minecraft.world.gen.blockstateprovider.SimpleBlockStateProvider;
import net.minecraft.world.gen.feature.AbstractFeatureSizeType;
import net.minecraft.world.gen.feature.BaseTreeFeatureConfig;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.FeatureSpread;
import net.minecraft.world.gen.feature.Features;
import net.minecraft.world.gen.feature.IFeatureConfig;
import net.minecraft.world.gen.feature.TwoLayerFeature;
import net.minecraft.world.gen.foliageplacer.BlobFoliagePlacer;
import net.minecraft.world.gen.foliageplacer.FoliagePlacer;
import net.minecraft.world.gen.placement.AtSurfaceWithExtraConfig;
import net.minecraft.world.gen.placement.IPlacementConfig;
import net.minecraft.world.gen.placement.NoiseDependant;
import net.minecraft.world.gen.placement.Placement;
import net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilder;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig;
import net.minecraft.world.gen.trunkplacer.AbstractTrunkPlacer;
import net.minecraft.world.gen.trunkplacer.StraightTrunkPlacer;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;

@GallifreyWorldsModElements.ModElement.Tag
public class LothalhillsBiome
extends GallifreyWorldsModElements.ModElement {
    public static Biome biome;

    public LothalhillsBiome(GallifreyWorldsModElements instance) {
        super(instance, 15);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new BiomeRegisterHandler());
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    private static class BiomeRegisterHandler {
        private BiomeRegisterHandler() {
        }

        @SubscribeEvent
        public void registerBiomes(RegistryEvent.Register<Biome> event) {
            if (biome == null) {
                BiomeAmbience effects = new BiomeAmbience.Builder().func_235239_a_(-26215).func_235246_b_(4159204).func_235248_c_(329011).func_242539_d(-26215).func_242540_e(10387789).func_242541_f(-3368704).func_235238_a_();
                BiomeGenerationSettings.Builder biomeGenerationSettings = new BiomeGenerationSettings.Builder().func_242517_a(SurfaceBuilder.field_215396_G.func_242929_a((ISurfaceBuilderConfig)new SurfaceBuilderConfig(Blocks.field_196658_i.func_176223_P(), Blocks.field_150348_b.func_176223_P(), Blocks.field_150348_b.func_176223_P())));
                biomeGenerationSettings.func_242513_a(GenerationStage.Decoration.VEGETAL_DECORATION, Feature.field_236291_c_.func_225566_b_((IFeatureConfig)new BaseTreeFeatureConfig.Builder((BlockStateProvider)new SimpleBlockStateProvider(Blocks.field_196617_K.func_176223_P()), (BlockStateProvider)new SimpleBlockStateProvider(Blocks.field_196642_W.func_176223_P()), (FoliagePlacer)new BlobFoliagePlacer(FeatureSpread.func_242252_a((int)2), FeatureSpread.func_242252_a((int)0), 3), (AbstractTrunkPlacer)new StraightTrunkPlacer(4, 2, 0), (AbstractFeatureSizeType)new TwoLayerFeature(1, 0, 1)).func_236700_a_().func_225568_b_()).func_227228_a_(Features.Placements.field_244001_l).func_227228_a_(Placement.field_242902_f.func_227446_a_((IPlacementConfig)new AtSurfaceWithExtraConfig(1, 0.1f, 1))));
                biomeGenerationSettings.func_242513_a(GenerationStage.Decoration.VEGETAL_DECORATION, Feature.field_227248_z_.func_225566_b_((IFeatureConfig)Features.Configs.field_243977_a).func_227228_a_(Features.Placements.field_244002_m).func_227228_a_(Placement.field_242900_d.func_227446_a_((IPlacementConfig)new NoiseDependant(-0.8, 5, 4))));
                biomeGenerationSettings.func_242513_a(GenerationStage.Decoration.VEGETAL_DECORATION, (ConfiguredFeature)Feature.field_227247_y_.func_225566_b_((IFeatureConfig)Features.Configs.field_243980_d).func_227228_a_(Features.Placements.field_244000_k).func_227228_a_(Features.Placements.field_244001_l).func_242731_b(4));
                DefaultBiomeFeatures.func_243750_j((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243756_p((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                MobSpawnInfo.Builder mobSpawnInfo = new MobSpawnInfo.Builder().func_242571_a();
                mobSpawnInfo.func_242575_a(EntityClassification.MONSTER, new MobSpawnInfo.Spawners(EntityType.field_200725_aD, 20, 4, 4));
                biome = new Biome.Builder().func_205415_a(Biome.RainType.RAIN).func_205419_a(Biome.Category.EXTREME_HILLS).func_205421_a(10.0f).func_205420_b(0.2f).func_205414_c(0.5f).func_205417_d(0.5f).func_235097_a_(effects).func_242458_a(mobSpawnInfo.func_242577_b()).func_242457_a(biomeGenerationSettings.func_242508_a()).func_242455_a();
                event.getRegistry().register(biome.setRegistryName("gallifrey_worlds:lothalhills"));
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Blocks
 *  net.minecraft.world.biome.Biome
 *  net.minecraft.world.biome.Biome$Builder
 *  net.minecraft.world.biome.Biome$Category
 *  net.minecraft.world.biome.Biome$RainType
 *  net.minecraft.world.biome.BiomeAmbience
 *  net.minecraft.world.biome.BiomeAmbience$Builder
 *  net.minecraft.world.biome.BiomeGenerationSettings$Builder
 *  net.minecraft.world.biome.DefaultBiomeFeatures
 *  net.minecraft.world.biome.MobSpawnInfo$Builder
 *  net.minecraft.world.gen.feature.structure.StructureFeatures
 *  net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilder
 *  net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 */
package gallifreyworlds.world.biome;

import gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.Blocks;
import net.minecraft.world.biome.Biome;
import net.minecraft.world.biome.BiomeAmbience;
import net.minecraft.world.biome.BiomeGenerationSettings;
import net.minecraft.world.biome.DefaultBiomeFeatures;
import net.minecraft.world.biome.MobSpawnInfo;
import net.minecraft.world.gen.feature.structure.StructureFeatures;
import net.minecraft.world.gen.surfacebuilders.ISurfaceBuilderConfig;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilder;
import net.minecraft.world.gen.surfacebuilders.SurfaceBuilderConfig;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;

@GallifreyWorldsModElements.ModElement.Tag
public class HellBiome
extends GallifreyWorldsModElements.ModElement {
    public static Biome biome;

    public HellBiome(GallifreyWorldsModElements instance) {
        super(instance, 8);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new BiomeRegisterHandler());
    }

    @Override
    public void init(FMLCommonSetupEvent event) {
    }

    private static class BiomeRegisterHandler {
        private BiomeRegisterHandler() {
        }

        @SubscribeEvent
        public void registerBiomes(RegistryEvent.Register<Biome> event) {
            if (biome == null) {
                BiomeAmbience effects = new BiomeAmbience.Builder().func_235239_a_(-26215).func_235246_b_(-52429).func_235248_c_(-39322).func_242539_d(-26215).func_242540_e(-26215).func_242541_f(-26215).func_235238_a_();
                BiomeGenerationSettings.Builder biomeGenerationSettings = new BiomeGenerationSettings.Builder().func_242517_a(SurfaceBuilder.field_215396_G.func_242929_a((ISurfaceBuilderConfig)new SurfaceBuilderConfig(Blocks.field_150424_aL.func_176223_P(), Blocks.field_150424_aL.func_176223_P(), Blocks.field_150424_aL.func_176223_P())));
                biomeGenerationSettings.func_242516_a(StructureFeatures.field_244149_o);
                DefaultBiomeFeatures.func_243738_d((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                DefaultBiomeFeatures.func_243750_j((BiomeGenerationSettings.Builder)biomeGenerationSettings);
                MobSpawnInfo.Builder mobSpawnInfo = new MobSpawnInfo.Builder().func_242571_a();
                biome = new Biome.Builder().func_205415_a(Biome.RainType.RAIN).func_205419_a(Biome.Category.NONE).func_205421_a(0.1f).func_205420_b(0.2f).func_205414_c(0.5f).func_205417_d(0.5f).func_235097_a_(effects).func_242458_a(mobSpawnInfo.func_242577_b()).func_242457_a(biomeGenerationSettings.func_242508_a()).func_242455_a();
                event.getRegistry().register(biome.setRegistryName("gallifrey_worlds:hell"));
            }
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.item.IItemTier
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.SwordItem
 *  net.minecraft.item.crafting.Ingredient
 *  net.minecraft.util.IItemProvider
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.item;

import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.item.ImperialiteItem;
import net.minecraft.item.IItemTier;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.SwordItem;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.IItemProvider;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialitetoolsSwordItem
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialitetools_sword")
    public static final Item block = null;

    public ImperialitetoolsSwordItem(GallifreyWorldsModElements instance) {
        super(instance, 29);
    }

    @Override
    public void initElements() {
        this.elements.items.add(() -> (Item)new SwordItem(new IItemTier(){

            public int func_200926_a() {
                return 5419;
            }

            public float func_200928_b() {
                return 22.0f;
            }

            public float func_200929_c() {
                return 52.0f;
            }

            public int func_200925_d() {
                return 18;
            }

            public int func_200927_e() {
                return 126;
            }

            public Ingredient func_200924_f() {
                return Ingredient.func_193369_a((ItemStack[])new ItemStack[]{new ItemStack((IItemProvider)ImperialiteItem.block)});
            }
        }, 3, -3.0f, new Item.Properties().func_200916_a(ItemGroup.field_78037_j)){}.setRegistryName("imperialitetools_sword"));
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.item.IItemTier
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.ShovelItem
 *  net.minecraft.item.crafting.Ingredient
 *  net.minecraft.util.IItemProvider
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.item;

import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.item.ImperialiteItem;
import net.minecraft.item.IItemTier;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.ShovelItem;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.IItemProvider;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialitetoolsShovelItem
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialitetools_shovel")
    public static final Item block = null;

    public ImperialitetoolsShovelItem(GallifreyWorldsModElements instance) {
        super(instance, 30);
    }

    @Override
    public void initElements() {
        this.elements.items.add(() -> (Item)new ShovelItem(new IItemTier(){

            public int func_200926_a() {
                return 5419;
            }

            public float func_200928_b() {
                return 22.0f;
            }

            public float func_200929_c() {
                return 16.0f;
            }

            public int func_200925_d() {
                return 18;
            }

            public int func_200927_e() {
                return 126;
            }

            public Ingredient func_200924_f() {
                return Ingredient.func_193369_a((ItemStack[])new ItemStack[]{new ItemStack((IItemProvider)ImperialiteItem.block)});
            }
        }, 1.0f, -3.0f, new Item.Properties().func_200916_a(ItemGroup.field_78040_i)){}.setRegistryName("imperialitetools_shovel"));
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.item.AxeItem
 *  net.minecraft.item.IItemTier
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.crafting.Ingredient
 *  net.minecraft.util.IItemProvider
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.item;

import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.item.ImperialiteItem;
import net.minecraft.item.AxeItem;
import net.minecraft.item.IItemTier;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.IItemProvider;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialitetoolsAxeItem
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialitetools_axe")
    public static final Item block = null;

    public ImperialitetoolsAxeItem(GallifreyWorldsModElements instance) {
        super(instance, 28);
    }

    @Override
    public void initElements() {
        this.elements.items.add(() -> (Item)new AxeItem(new IItemTier(){

            public int func_200926_a() {
                return 5419;
            }

            public float func_200928_b() {
                return 22.0f;
            }

            public float func_200929_c() {
                return 79.0f;
            }

            public int func_200925_d() {
                return 18;
            }

            public int func_200927_e() {
                return 126;
            }

            public Ingredient func_200924_f() {
                return Ingredient.func_193369_a((ItemStack[])new ItemStack[]{new ItemStack((IItemProvider)ImperialiteItem.block)});
            }
        }, 1.0f, -3.0f, new Item.Properties().func_200916_a(ItemGroup.field_78040_i)){}.setRegistryName("imperialitetools_axe"));
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.item.IItemTier
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.PickaxeItem
 *  net.minecraft.item.crafting.Ingredient
 *  net.minecraft.util.IItemProvider
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.item;

import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.item.ImperialiteItem;
import net.minecraft.item.IItemTier;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.PickaxeItem;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.IItemProvider;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialitetoolsPickaxeItem
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialitetools_pickaxe")
    public static final Item block = null;

    public ImperialitetoolsPickaxeItem(GallifreyWorldsModElements instance) {
        super(instance, 27);
    }

    @Override
    public void initElements() {
        this.elements.items.add(() -> (Item)new PickaxeItem(new IItemTier(){

            public int func_200926_a() {
                return 5419;
            }

            public float func_200928_b() {
                return 22.0f;
            }

            public float func_200929_c() {
                return 16.0f;
            }

            public int func_200925_d() {
                return 18;
            }

            public int func_200927_e() {
                return 126;
            }

            public Ingredient func_200924_f() {
                return Ingredient.func_193369_a((ItemStack[])new ItemStack[]{new ItemStack((IItemProvider)ImperialiteItem.block)});
            }
        }, 1, -3.0f, new Item.Properties().func_200916_a(ItemGroup.field_78040_i)){}.setRegistryName("imperialitetools_pickaxe"));
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.item.HoeItem
 *  net.minecraft.item.IItemTier
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.crafting.Ingredient
 *  net.minecraft.util.IItemProvider
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.item;

import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.item.ImperialiteItem;
import net.minecraft.item.HoeItem;
import net.minecraft.item.IItemTier;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.IItemProvider;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialitetoolsHoeItem
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialitetools_hoe")
    public static final Item block = null;

    public ImperialitetoolsHoeItem(GallifreyWorldsModElements instance) {
        super(instance, 31);
    }

    @Override
    public void initElements() {
        this.elements.items.add(() -> (Item)new HoeItem(new IItemTier(){

            public int func_200926_a() {
                return 5419;
            }

            public float func_200928_b() {
                return 22.0f;
            }

            public float func_200929_c() {
                return 16.0f;
            }

            public int func_200925_d() {
                return 18;
            }

            public int func_200927_e() {
                return 126;
            }

            public Ingredient func_200924_f() {
                return Ingredient.func_193369_a((ItemStack[])new ItemStack[]{new ItemStack((IItemProvider)ImperialiteItem.block)});
            }
        }, 0, -3.0f, new Item.Properties().func_200916_a(ItemGroup.field_78040_i)){}.setRegistryName("imperialitetools_hoe"));
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.client.util.ITooltipFlag
 *  net.minecraft.entity.Entity
 *  net.minecraft.inventory.EquipmentSlotType
 *  net.minecraft.item.ArmorItem
 *  net.minecraft.item.IArmorMaterial
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.crafting.Ingredient
 *  net.minecraft.util.IItemProvider
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.SoundEvent
 *  net.minecraft.util.text.ITextComponent
 *  net.minecraft.util.text.StringTextComponent
 *  net.minecraft.world.World
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.registries.ForgeRegistries
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.item;

import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.item.ImperialiteItem;
import java.util.List;
import net.minecraft.client.util.ITooltipFlag;
import net.minecraft.entity.Entity;
import net.minecraft.inventory.EquipmentSlotType;
import net.minecraft.item.ArmorItem;
import net.minecraft.item.IArmorMaterial;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.crafting.Ingredient;
import net.minecraft.util.IItemProvider;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraft.util.text.ITextComponent;
import net.minecraft.util.text.StringTextComponent;
import net.minecraft.world.World;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.registries.ForgeRegistries;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialiteaItem
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialite_helmet")
    public static final Item helmet = null;
    @ObjectHolder(value="gallifrey_worlds:imperialite_chestplate")
    public static final Item body = null;
    @ObjectHolder(value="gallifrey_worlds:imperialite_leggings")
    public static final Item legs = null;
    @ObjectHolder(value="gallifrey_worlds:imperialite_boots")
    public static final Item boots = null;

    public ImperialiteaItem(GallifreyWorldsModElements instance) {
        super(instance, 26);
    }

    @Override
    public void initElements() {
        IArmorMaterial armormaterial = new IArmorMaterial(){

            public int func_200896_a(EquipmentSlotType slot) {
                return (new int[]{13, 15, 16, 11})[slot.func_188454_b()] * 50;
            }

            public int func_200902_b(EquipmentSlotType slot) {
                return (new int[]{10, 10, 10, 10})[slot.func_188454_b()];
            }

            public int func_200900_a() {
                return 20;
            }

            public SoundEvent func_200899_b() {
                return (SoundEvent)ForgeRegistries.SOUND_EVENTS.getValue(new ResourceLocation(""));
            }

            public Ingredient func_200898_c() {
                return Ingredient.func_193369_a((ItemStack[])new ItemStack[]{new ItemStack((IItemProvider)ImperialiteItem.block)});
            }

            @OnlyIn(value=Dist.CLIENT)
            public String func_200897_d() {
                return "imperialite";
            }

            public float func_200901_e() {
                return 7.0f;
            }

            public float func_230304_f_() {
                return 0.2f;
            }
        };
        this.elements.items.add(() -> (Item)new ArmorItem(armormaterial, EquipmentSlotType.HEAD, new Item.Properties().func_200916_a(ItemGroup.field_78037_j).func_234689_a_()){

            public void func_77624_a(ItemStack itemstack, World world, List<ITextComponent> list, ITooltipFlag flag) {
                super.func_77624_a(itemstack, world, list, flag);
                list.add((ITextComponent)new StringTextComponent("health_boost 10"));
            }

            public String getArmorTexture(ItemStack stack, Entity entity, EquipmentSlotType slot, String type) {
                return "gallifrey_worlds:textures/models/armor/imperialite_layer_" + (slot == EquipmentSlotType.LEGS ? "2" : "1") + ".png";
            }
        }.setRegistryName("imperialite_helmet"));
        this.elements.items.add(() -> (Item)new ArmorItem(armormaterial, EquipmentSlotType.CHEST, new Item.Properties().func_200916_a(ItemGroup.field_78037_j)){

            public String getArmorTexture(ItemStack stack, Entity entity, EquipmentSlotType slot, String type) {
                return "gallifrey_worlds:textures/models/armor/imperialite_layer_" + (slot == EquipmentSlotType.LEGS ? "2" : "1") + ".png";
            }
        }.setRegistryName("imperialite_chestplate"));
        this.elements.items.add(() -> (Item)new ArmorItem(armormaterial, EquipmentSlotType.LEGS, new Item.Properties().func_200916_a(ItemGroup.field_78037_j)){

            public String getArmorTexture(ItemStack stack, Entity entity, EquipmentSlotType slot, String type) {
                return "gallifrey_worlds:textures/models/armor/imperialite_layer_" + (slot == EquipmentSlotType.LEGS ? "2" : "1") + ".png";
            }
        }.setRegistryName("imperialite_leggings"));
        this.elements.items.add(() -> (Item)new ArmorItem(armormaterial, EquipmentSlotType.FEET, new Item.Properties().func_200916_a(ItemGroup.field_78037_j)){

            public String getArmorTexture(ItemStack stack, Entity entity, EquipmentSlotType slot, String type) {
                return "gallifrey_worlds:textures/models/armor/imperialite_layer_" + (slot == EquipmentSlotType.LEGS ? "2" : "1") + ".png";
            }
        }.setRegistryName("imperialite_boots"));
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.BlockState
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.item.Rarity
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.item;

import gallifreyworlds.GallifreyWorldsModElements;
import net.minecraft.block.BlockState;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.item.Rarity;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialiteItem
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialite")
    public static final Item block = null;

    public ImperialiteItem(GallifreyWorldsModElements instance) {
        super(instance, 18);
    }

    @Override
    public void initElements() {
        this.elements.items.add(() -> new ItemCustom());
    }

    public static class ItemCustom
    extends Item {
        public ItemCustom() {
            super(new Item.Properties().func_200916_a(ItemGroup.field_78035_l).func_200917_a(64).func_208103_a(Rarity.RARE));
            this.setRegistryName("imperialite");
        }

        public int func_77619_b() {
            return 0;
        }

        public int func_77626_a(ItemStack itemstack) {
            return 0;
        }

        public float func_150893_a(ItemStack par1ItemStack, BlockState par2Block) {
            return 1.0f;
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Block
 *  net.minecraft.enchantment.Enchantment
 *  net.minecraft.entity.EntityType
 *  net.minecraft.item.Item
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.SoundEvent
 *  net.minecraftforge.common.MinecraftForge
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.common.Mod
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.event.server.FMLServerStartingEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 *  net.minecraftforge.fml.network.NetworkRegistry
 *  net.minecraftforge.fml.network.simple.SimpleChannel
 *  net.minecraftforge.registries.IForgeRegistryEntry
 *  org.apache.logging.log4j.LogManager
 *  org.apache.logging.log4j.Logger
 */
package gallifreyworlds;

import gallifreyworlds.GallifreyWorldsModElements;
import java.util.function.Supplier;
import net.minecraft.block.Block;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.entity.EntityType;
import net.minecraft.item.Item;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.server.FMLServerStartingEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.fml.network.NetworkRegistry;
import net.minecraftforge.fml.network.simple.SimpleChannel;
import net.minecraftforge.registries.IForgeRegistryEntry;
import org.apache.logging.log4j.LogManager;
import org.apache.logging.log4j.Logger;

@Mod(value="gallifrey_worlds")
public class GallifreyWorldsMod {
    public static final Logger LOGGER = LogManager.getLogger(GallifreyWorldsMod.class);
    private static final String PROTOCOL_VERSION = "1";
    public static final SimpleChannel PACKET_HANDLER = NetworkRegistry.newSimpleChannel((ResourceLocation)new ResourceLocation("gallifrey_worlds", "gallifrey_worlds"), () -> "1", "1"::equals, "1"::equals);
    public GallifreyWorldsModElements elements = new GallifreyWorldsModElements();

    public GallifreyWorldsMod() {
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)this);
        FMLJavaModLoadingContext.get().getModEventBus().addListener(this::init);
        FMLJavaModLoadingContext.get().getModEventBus().addListener(this::clientLoad);
        MinecraftForge.EVENT_BUS.register((Object)new GallifreyWorldsModFMLBusEvents(this));
    }

    private void init(FMLCommonSetupEvent event) {
        this.elements.getElements().forEach(element -> element.init(event));
    }

    public void clientLoad(FMLClientSetupEvent event) {
        this.elements.getElements().forEach(element -> element.clientLoad(event));
    }

    @SubscribeEvent
    public void registerBlocks(RegistryEvent.Register<Block> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getBlocks().stream().map(Supplier::get).toArray(Block[]::new));
    }

    @SubscribeEvent
    public void registerItems(RegistryEvent.Register<Item> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getItems().stream().map(Supplier::get).toArray(Item[]::new));
    }

    @SubscribeEvent
    public void registerEntities(RegistryEvent.Register<EntityType<?>> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getEntities().stream().map(Supplier::get).toArray(EntityType[]::new));
    }

    @SubscribeEvent
    public void registerEnchantments(RegistryEvent.Register<Enchantment> event) {
        event.getRegistry().registerAll((IForgeRegistryEntry[])this.elements.getEnchantments().stream().map(Supplier::get).toArray(Enchantment[]::new));
    }

    @SubscribeEvent
    public void registerSounds(RegistryEvent.Register<SoundEvent> event) {
        this.elements.registerSounds(event);
    }

    private static class GallifreyWorldsModFMLBusEvents {
        private final GallifreyWorldsMod parent;

        GallifreyWorldsModFMLBusEvents(GallifreyWorldsMod parent) {
            this.parent = parent;
        }

        @SubscribeEvent
        public void serverLoad(FMLServerStartingEvent event) {
            this.parent.elements.getElements().forEach(element -> element.serverLoad(event));
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  net.minecraft.block.Block
 *  net.minecraft.enchantment.Enchantment
 *  net.minecraft.entity.EntityType
 *  net.minecraft.item.Item
 *  net.minecraft.network.PacketBuffer
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.SoundEvent
 *  net.minecraftforge.api.distmarker.Dist
 *  net.minecraftforge.api.distmarker.OnlyIn
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.fml.ModList
 *  net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent
 *  net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent
 *  net.minecraftforge.fml.event.server.FMLServerStartingEvent
 *  net.minecraftforge.fml.network.NetworkEvent$Context
 *  net.minecraftforge.forgespi.language.ModFileScanData
 *  net.minecraftforge.forgespi.language.ModFileScanData$AnnotationData
 */
package gallifreyworlds;

import gallifreyworlds.GallifreyWorldsMod;
import java.lang.annotation.Retention;
import java.lang.annotation.RetentionPolicy;
import java.util.ArrayList;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import java.util.function.BiConsumer;
import java.util.function.Function;
import java.util.function.Supplier;
import net.minecraft.block.Block;
import net.minecraft.enchantment.Enchantment;
import net.minecraft.entity.EntityType;
import net.minecraft.item.Item;
import net.minecraft.network.PacketBuffer;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.SoundEvent;
import net.minecraftforge.api.distmarker.Dist;
import net.minecraftforge.api.distmarker.OnlyIn;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.fml.ModList;
import net.minecraftforge.fml.event.lifecycle.FMLClientSetupEvent;
import net.minecraftforge.fml.event.lifecycle.FMLCommonSetupEvent;
import net.minecraftforge.fml.event.server.FMLServerStartingEvent;
import net.minecraftforge.fml.network.NetworkEvent;
import net.minecraftforge.forgespi.language.ModFileScanData;

public class GallifreyWorldsModElements {
    public final List<ModElement> elements = new ArrayList<ModElement>();
    public final List<Supplier<Block>> blocks = new ArrayList<Supplier<Block>>();
    public final List<Supplier<Item>> items = new ArrayList<Supplier<Item>>();
    public final List<Supplier<EntityType<?>>> entities = new ArrayList();
    public final List<Supplier<Enchantment>> enchantments = new ArrayList<Supplier<Enchantment>>();
    public static Map<ResourceLocation, SoundEvent> sounds = new HashMap<ResourceLocation, SoundEvent>();
    private int messageID = 0;

    public GallifreyWorldsModElements() {
        try {
            ModFileScanData modFileInfo = ModList.get().getModFileById("gallifrey_worlds").getFile().getScanResult();
            Set annotations = modFileInfo.getAnnotations();
            for (ModFileScanData.AnnotationData annotationData : annotations) {
                Class<?> clazz;
                if (!annotationData.getAnnotationType().getClassName().equals(ModElement.Tag.class.getName()) || (clazz = Class.forName(annotationData.getClassType().getClassName())).getSuperclass() != ModElement.class) continue;
                this.elements.add((ModElement)clazz.getConstructor(this.getClass()).newInstance(this));
            }
        }
        catch (Exception e) {
            e.printStackTrace();
        }
        Collections.sort(this.elements);
        this.elements.forEach(ModElement::initElements);
    }

    public void registerSounds(RegistryEvent.Register<SoundEvent> event) {
        for (Map.Entry<ResourceLocation, SoundEvent> sound : sounds.entrySet()) {
            event.getRegistry().register(sound.getValue().setRegistryName(sound.getKey()));
        }
    }

    public <T> void addNetworkMessage(Class<T> messageType, BiConsumer<T, PacketBuffer> encoder, Function<PacketBuffer, T> decoder, BiConsumer<T, Supplier<NetworkEvent.Context>> messageConsumer) {
        GallifreyWorldsMod.PACKET_HANDLER.registerMessage(this.messageID, messageType, encoder, decoder, messageConsumer);
        ++this.messageID;
    }

    public List<ModElement> getElements() {
        return this.elements;
    }

    public List<Supplier<Block>> getBlocks() {
        return this.blocks;
    }

    public List<Supplier<Item>> getItems() {
        return this.items;
    }

    public List<Supplier<EntityType<?>>> getEntities() {
        return this.entities;
    }

    public List<Supplier<Enchantment>> getEnchantments() {
        return this.enchantments;
    }

    public static class ModElement
    implements Comparable<ModElement> {
        protected final GallifreyWorldsModElements elements;
        protected final int sortid;

        public ModElement(GallifreyWorldsModElements elements, int sortid) {
            this.elements = elements;
            this.sortid = sortid;
        }

        public void initElements() {
        }

        public void init(FMLCommonSetupEvent event) {
        }

        public void serverLoad(FMLServerStartingEvent event) {
        }

        @OnlyIn(value=Dist.CLIENT)
        public void clientLoad(FMLClientSetupEvent event) {
        }

        @Override
        public int compareTo(ModElement other) {
            return this.sortid - other.sortid;
        }

        @Retention(value=RetentionPolicy.RUNTIME)
        public static @interface Tag {
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.mojang.serialization.Codec
 *  net.minecraft.block.AbstractBlock$Properties
 *  net.minecraft.block.Block
 *  net.minecraft.block.BlockState
 *  net.minecraft.block.Blocks
 *  net.minecraft.block.SoundType
 *  net.minecraft.block.material.Material
 *  net.minecraft.entity.player.PlayerEntity
 *  net.minecraft.item.BlockItem
 *  net.minecraft.item.BlockItemUseContext
 *  net.minecraft.item.Item
 *  net.minecraft.item.Item$Properties
 *  net.minecraft.item.ItemGroup
 *  net.minecraft.item.ItemStack
 *  net.minecraft.loot.LootContext$Builder
 *  net.minecraft.util.IItemProvider
 *  net.minecraft.util.RegistryKey
 *  net.minecraft.util.ResourceLocation
 *  net.minecraft.util.math.BlockPos
 *  net.minecraft.util.math.RayTraceResult
 *  net.minecraft.util.registry.Registry
 *  net.minecraft.util.registry.WorldGenRegistries
 *  net.minecraft.world.IBlockReader
 *  net.minecraft.world.ISeedReader
 *  net.minecraft.world.gen.ChunkGenerator
 *  net.minecraft.world.gen.GenerationStage$Decoration
 *  net.minecraft.world.gen.feature.ConfiguredFeature
 *  net.minecraft.world.gen.feature.Feature
 *  net.minecraft.world.gen.feature.IFeatureConfig
 *  net.minecraft.world.gen.feature.OreFeature
 *  net.minecraft.world.gen.feature.OreFeatureConfig
 *  net.minecraft.world.gen.feature.template.IRuleTestType
 *  net.minecraft.world.gen.feature.template.RuleTest
 *  net.minecraftforge.common.MinecraftForge
 *  net.minecraftforge.event.RegistryEvent$Register
 *  net.minecraftforge.event.world.BiomeLoadingEvent
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext
 *  net.minecraftforge.registries.ObjectHolder
 */
package gallifreyworlds.block;

import com.mojang.serialization.Codec;
import gallifreyworlds.GallifreyWorldsModElements;
import gallifreyworlds.item.ImperialiteItem;
import java.util.Collections;
import java.util.List;
import java.util.Random;
import net.minecraft.block.AbstractBlock;
import net.minecraft.block.Block;
import net.minecraft.block.BlockState;
import net.minecraft.block.Blocks;
import net.minecraft.block.SoundType;
import net.minecraft.block.material.Material;
import net.minecraft.entity.player.PlayerEntity;
import net.minecraft.item.BlockItem;
import net.minecraft.item.BlockItemUseContext;
import net.minecraft.item.Item;
import net.minecraft.item.ItemGroup;
import net.minecraft.item.ItemStack;
import net.minecraft.loot.LootContext;
import net.minecraft.util.IItemProvider;
import net.minecraft.util.RegistryKey;
import net.minecraft.util.ResourceLocation;
import net.minecraft.util.math.BlockPos;
import net.minecraft.util.math.RayTraceResult;
import net.minecraft.util.registry.Registry;
import net.minecraft.util.registry.WorldGenRegistries;
import net.minecraft.world.IBlockReader;
import net.minecraft.world.ISeedReader;
import net.minecraft.world.gen.ChunkGenerator;
import net.minecraft.world.gen.GenerationStage;
import net.minecraft.world.gen.feature.ConfiguredFeature;
import net.minecraft.world.gen.feature.Feature;
import net.minecraft.world.gen.feature.IFeatureConfig;
import net.minecraft.world.gen.feature.OreFeature;
import net.minecraft.world.gen.feature.OreFeatureConfig;
import net.minecraft.world.gen.feature.template.IRuleTestType;
import net.minecraft.world.gen.feature.template.RuleTest;
import net.minecraftforge.common.MinecraftForge;
import net.minecraftforge.event.RegistryEvent;
import net.minecraftforge.event.world.BiomeLoadingEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.javafmlmod.FMLJavaModLoadingContext;
import net.minecraftforge.registries.ObjectHolder;

@GallifreyWorldsModElements.ModElement.Tag
public class ImperialoreBlock
extends GallifreyWorldsModElements.ModElement {
    @ObjectHolder(value="gallifrey_worlds:imperialore")
    public static final Block block = null;
    private static Feature<OreFeatureConfig> feature = null;
    private static ConfiguredFeature<?, ?> configuredFeature = null;
    private static IRuleTestType<CustomRuleTest> CUSTOM_MATCH = null;

    public ImperialoreBlock(GallifreyWorldsModElements instance) {
        super(instance, 17);
        MinecraftForge.EVENT_BUS.register((Object)this);
        FMLJavaModLoadingContext.get().getModEventBus().register((Object)new FeatureRegisterHandler());
    }

    @Override
    public void initElements() {
        this.elements.blocks.add(() -> new CustomBlock());
        this.elements.items.add(() -> (Item)new BlockItem(block, new Item.Properties().func_200916_a(ItemGroup.field_78035_l)).setRegistryName(block.getRegistryName()));
    }

    @SubscribeEvent
    public void addFeatureToBiomes(BiomeLoadingEvent event) {
        event.getGeneration().getFeatures(GenerationStage.Decoration.UNDERGROUND_ORES).add(() -> configuredFeature);
    }

    private static class FeatureRegisterHandler {
        private FeatureRegisterHandler() {
        }

        @SubscribeEvent
        public void registerFeature(RegistryEvent.Register<Feature<?>> event) {
            CUSTOM_MATCH = (IRuleTestType)Registry.func_218322_a((Registry)Registry.field_218363_D, (ResourceLocation)new ResourceLocation("gallifrey_worlds:imperialore_match"), () -> CustomRuleTest.codec);
            feature = (Feature)new OreFeature(OreFeatureConfig.field_236566_a_){

                public boolean func_241855_a(ISeedReader world, ChunkGenerator generator, Random rand, BlockPos pos, OreFeatureConfig config) {
                    RegistryKey dimensionType = world.func_201672_e().func_234923_W_();
                    boolean dimensionCriteria = false;
                    if (dimensionType == RegistryKey.func_240903_a_((RegistryKey)Registry.field_239699_ae_, (ResourceLocation)new ResourceLocation("gallifrey_worlds:tatooine"))) {
                        dimensionCriteria = true;
                    }
                    if (dimensionType == RegistryKey.func_240903_a_((RegistryKey)Registry.field_239699_ae_, (ResourceLocation)new ResourceLocation("gallifrey_worlds:hoth"))) {
                        dimensionCriteria = true;
                    }
                    if (dimensionType == RegistryKey.func_240903_a_((RegistryKey)Registry.field_239699_ae_, (ResourceLocation)new ResourceLocation("gallifrey_worlds:naboo"))) {
                        dimensionCriteria = true;
                    }
                    if (dimensionType == RegistryKey.func_240903_a_((RegistryKey)Registry.field_239699_ae_, (ResourceLocation)new ResourceLocation("gallifrey_worlds:mustafar"))) {
                        dimensionCriteria = true;
                    }
                    if (dimensionType == RegistryKey.func_240903_a_((RegistryKey)Registry.field_239699_ae_, (ResourceLocation)new ResourceLocation("gallifrey_worlds:lothal"))) {
                        dimensionCriteria = true;
                    }
                    if (dimensionType == RegistryKey.func_240903_a_((RegistryKey)Registry.field_239699_ae_, (ResourceLocation)new ResourceLocation("gallifrey_worlds:ryloth"))) {
                        dimensionCriteria = true;
                    }
                    if (!dimensionCriteria) {
                        return false;
                    }
                    return super.func_241855_a(world, generator, rand, pos, config);
                }
            };
            configuredFeature = (ConfiguredFeature)((ConfiguredFeature)((ConfiguredFeature)feature.func_225566_b_((IFeatureConfig)new OreFeatureConfig((RuleTest)CustomRuleTest.INSTANCE, block.func_176223_P(), 16)).func_242733_d(64)).func_242728_a()).func_242731_b(10);
            event.getRegistry().register(feature.setRegistryName("imperialore"));
            Registry.func_218322_a((Registry)WorldGenRegistries.field_243653_e, (ResourceLocation)new ResourceLocation("gallifrey_worlds:imperialore"), (Object)configuredFeature);
        }
    }

    private static class CustomRuleTest
    extends RuleTest {
        static final CustomRuleTest INSTANCE = new CustomRuleTest();
        static final Codec<CustomRuleTest> codec = Codec.unit(() -> INSTANCE);

        private CustomRuleTest() {
        }

        public boolean func_215181_a(BlockState blockAt, Random random) {
            boolean blockCriteria = false;
            if (blockAt.func_177230_c() == Blocks.field_150348_b) {
                blockCriteria = true;
            }
            return blockCriteria;
        }

        protected IRuleTestType<?> func_215180_a() {
            return CUSTOM_MATCH;
        }
    }

    public static class CustomBlock
    extends Block {
        public CustomBlock() {
            super(AbstractBlock.Properties.func_200945_a((Material)Material.field_151576_e).func_200947_a(SoundType.field_185851_d).func_200948_a(1.25f, 10.0f).func_235838_a_(s -> 0));
            this.setRegistryName("imperialore");
        }

        public int func_200011_d(BlockState state, IBlockReader worldIn, BlockPos pos) {
            return 15;
        }

        public boolean func_196253_a(BlockState state, BlockItemUseContext context) {
            return context.func_195996_i().func_77973_b() != this.func_199767_j();
        }

        public ItemStack getPickBlock(BlockState state, RayTraceResult target, IBlockReader world, BlockPos pos, PlayerEntity player) {
            return new ItemStack((IItemProvider)block);
        }

        public List<ItemStack> func_220076_a(BlockState state, LootContext.Builder builder) {
            List dropsOriginal = super.func_220076_a(state, builder);
            if (!dropsOriginal.isEmpty()) {
                return dropsOriginal;
            }
            return Collections.singletonList(new ItemStack((IItemProvider)ImperialiteItem.block));
        }
    }
}

/*
 * Decompiled with CFR 0.152.
 * 
 * Could not load the following classes:
 *  com.mojang.brigadier.arguments.ArgumentType
 *  com.mojang.brigadier.arguments.StringArgumentType
 *  com.mojang.brigadier.builder.LiteralArgumentBuilder
 *  com.mojang.brigadier.context.CommandContext
 *  net.minecraft.command.CommandSource
 *  net.minecraft.command.Commands
 *  net.minecraft.entity.Entity
 *  net.minecraft.world.server.ServerWorld
 *  net.minecraftforge.common.util.FakePlayerFactory
 *  net.minecraftforge.event.RegisterCommandsEvent
 *  net.minecraftforge.eventbus.api.SubscribeEvent
 *  net.minecraftforge.fml.common.Mod$EventBusSubscriber
 */
package gallifreyworlds.command;

import com.mojang.brigadier.arguments.ArgumentType;
import com.mojang.brigadier.arguments.StringArgumentType;
import com.mojang.brigadier.builder.LiteralArgumentBuilder;
import com.mojang.brigadier.context.CommandContext;
import gallifreyworlds.procedures.FuckCommandExecutedProcedure;
import java.util.AbstractMap;
import java.util.Arrays;
import java.util.HashMap;
import java.util.Map;
import java.util.stream.Stream;
import net.minecraft.command.CommandSource;
import net.minecraft.command.Commands;
import net.minecraft.entity.Entity;
import net.minecraft.world.server.ServerWorld;
import net.minecraftforge.common.util.FakePlayerFactory;
import net.minecraftforge.event.RegisterCommandsEvent;
import net.minecraftforge.eventbus.api.SubscribeEvent;
import net.minecraftforge.fml.common.Mod;

@Mod.EventBusSubscriber
public class FuckCommand {
    @SubscribeEvent
    public static void registerCommands(RegisterCommandsEvent event) {
        event.getDispatcher().register((LiteralArgumentBuilder)((LiteralArgumentBuilder)((LiteralArgumentBuilder)LiteralArgumentBuilder.literal((String)"fuck").requires(s -> s.func_197034_c(4))).then(Commands.func_197056_a((String)"arguments", (ArgumentType)StringArgumentType.greedyString()).executes(FuckCommand::execute))).executes(FuckCommand::execute));
    }

    private static int execute(CommandContext<CommandSource> ctx) {
        ServerWorld world = ((CommandSource)ctx.getSource()).func_197023_e();
        double x = ((CommandSource)ctx.getSource()).func_197036_d().func_82615_a();
        double y = ((CommandSource)ctx.getSource()).func_197036_d().func_82617_b();
        double z = ((CommandSource)ctx.getSource()).func_197036_d().func_82616_c();
        Entity entity = ((CommandSource)ctx.getSource()).func_197022_f();
        if (entity == null) {
            entity = FakePlayerFactory.getMinecraft((ServerWorld)world);
        }
        HashMap cmdparams = new HashMap();
        int[] index = new int[]{-1};
        Arrays.stream(ctx.getInput().split("\\s+")).forEach(param -> {
            if (index[0] >= 0) {
                cmdparams.put(Integer.toString(index[0]), param);
            }
            index[0] = index[0] + 1;
        });
        FuckCommandExecutedProcedure.executeProcedure(Stream.of(new AbstractMap.SimpleEntry<String, Entity>("entity", entity)).collect(HashMap::new, (_m, _e) -> _m.put(_e.getKey(), _e.getValue()), Map::putAll));
        return 0;
    }
}

